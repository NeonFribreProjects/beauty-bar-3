FROM node:18-alpine AS frontend-builder
WORKDIR /app/frontend
COPY client/package*.json ./
RUN npm install
COPY client/ .
RUN npm run build

FROM node:18-alpine AS backend-builder
WORKDIR /app/backend
COPY server/package*.json ./
RUN npm install
RUN npm install @types/node --save-dev
COPY server/ .
RUN npx prisma generate
RUN npx tsc -p prisma/tsconfig.prisma.json
RUN npm run build
# Compile seed file with specific config
RUN npx tsc -p prisma/tsconfig.seed.json

FROM node:18-alpine
WORKDIR /app/server
RUN apk add --no-cache openssl

# Update copy paths to match new structure
COPY --from=frontend-builder /app/frontend/dist ../client/dist
COPY --from=backend-builder /app/backend/dist ./dist
COPY --from=backend-builder /app/backend/package*.json ./
COPY --from=backend-builder /app/backend/prisma ./prisma
COPY --from=backend-builder /app/backend/prisma/dist/seed.js ./prisma/

# Install in correct location
RUN npm install --production
RUN npx prisma generate

WORKDIR /app
COPY docker-entrypoint.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/docker-entrypoint.sh

EXPOSE 3000
CMD ["/usr/local/bin/docker-entrypoint.sh"]
